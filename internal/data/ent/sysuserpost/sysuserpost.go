// Code generated by ent, DO NOT EDIT.

package sysuserpost

import (
	"time"
)

const (
	// Label holds the string label denoting the sysuserpost type in the database.
	Label = "sys_user_post"
	// FieldSysUserID holds the string denoting the sys_user_id field in the database.
	FieldSysUserID = "sys_user_id"
	// FieldSysPostID holds the string denoting the sys_post_id field in the database.
	FieldSysPostID = "sys_post_id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// EdgePost holds the string denoting the post edge name in mutations.
	EdgePost = "post"
	// SysUserFieldID holds the string denoting the ID field of the SysUser.
	SysUserFieldID = "id"
	// SysPostFieldID holds the string denoting the ID field of the SysPost.
	SysPostFieldID = "id"
	// Table holds the table name of the sysuserpost in the database.
	Table = "sys_user_post"
	// UserTable is the table that holds the user relation/edge.
	UserTable = "sys_user_post"
	// UserInverseTable is the table name for the SysUser entity.
	// It exists in this package in order to avoid circular dependency with the "sysuser" package.
	UserInverseTable = "sys_user"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "sys_user_id"
	// PostTable is the table that holds the post relation/edge.
	PostTable = "sys_user_post"
	// PostInverseTable is the table name for the SysPost entity.
	// It exists in this package in order to avoid circular dependency with the "syspost" package.
	PostInverseTable = "sys_post"
	// PostColumn is the table column denoting the post relation/edge.
	PostColumn = "sys_post_id"
)

// Columns holds all SQL columns for sysuserpost fields.
var Columns = []string{
	FieldSysUserID,
	FieldSysPostID,
	FieldCreatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt time.Time
)
